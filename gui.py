from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup, InlineKeyboardButton
from callbackdata import SitesList, SiteAction
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


def menu():
    kb = InlineKeyboardBuilder()
    kb.button(
        text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç',
        callback_data='addsite')
    kb.button(
        text='üìã –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤',
        callback_data='listsites')
    # kb.button(
    #     text='üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞',
    #     callback_data='delsite')
    
    kb.adjust(2)
    return kb.as_markup()

def sites_list(sites):
    kb = InlineKeyboardBuilder()
    for site in sites:
        enabled = "üü¢" if site.enabled else "üî¥"
        kb.button(
        text= f"{enabled} {site.name}",
        callback_data=SitesList(name=site.name))
    kb.adjust(2)
    return kb.as_markup()

def site_action(site):
    if site.enabled:
        enable_button = InlineKeyboardButton(text="üî¥ –û—Ç–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", callback_data=SiteAction(name=site.name, action="onoff").pack())
    else:
        enable_button = InlineKeyboardButton(text="üü¢ –í–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", callback_data=SiteAction(name=site.name, action="onoff").pack())
    return InlineKeyboardMarkup(inline_keyboard=[
        [enable_button,InlineKeyboardButton(text="üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data=SiteAction(name=site.name, action="settingsnotif").pack())],
        [InlineKeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data=SiteAction(name=site.name, action="report").pack()),InlineKeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞", callback_data=SiteAction(name=site.name, action="export").pack())],
        [InlineKeyboardButton(text="‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=SiteAction(name=site.name, action="edit").pack()),
         InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç", callback_data=SiteAction(name=site.name, action="delete").pack())],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–∞—è", callback_data="menu")]
        
    ])

def notification(site):
    kb = InlineKeyboardBuilder()
    if site.notify_on_down:
        down_text = "üü¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–∞–¥–µ–Ω–∏–∏"
    else:
        down_text = "üî¥ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–∞–¥–µ–Ω–∏–∏"
    if site.notify_on_recovery:
        up_text = "üü¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏"
    else:
        up_text = "üî¥ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏"
    kb.button(
        text = down_text,
        callback_data=SiteAction(name=site.name,action="notifdown"))
    kb.button(
        text= up_text,
        callback_data=SiteAction(name=site.name,action="notifrecovery"))
    kb.button(
        text= '–ù–∞–∑–∞–¥',
        callback_data=SitesList(name=site.name))
    kb.adjust(2)
    return kb.as_markup()


def skip_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )